var _bundsol$boxed$Boxed_Dictionary$tryValue = F2(
	function (_p0, boxed) {
		var _p1 = boxed;
		if (_p1.ctor === 'Json') {
			return _elm_lang$core$Maybe$Just(_p1._0);
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _bundsol$boxed$Boxed_Dictionary$tryString = F2(
	function (_p2, boxed) {
		var _p3 = boxed;
		if (_p3.ctor === 'Str') {
			return _elm_lang$core$Maybe$Just(_p3._0);
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _bundsol$boxed$Boxed_Dictionary$tryFloat = F2(
	function (_p4, boxed) {
		var _p5 = boxed;
		switch (_p5.ctor) {
			case 'Double':
				return _elm_lang$core$Maybe$Just(_p5._0);
			case 'Integer':
				return _elm_lang$core$Maybe$Just(
					_elm_lang$core$Basics$toFloat(_p5._0));
			default:
				return _elm_lang$core$Maybe$Nothing;
		}
	});
var _bundsol$boxed$Boxed_Dictionary$tryBool = F2(
	function (_p6, boxed) {
		var _p7 = boxed;
		if (_p7.ctor === 'Boolean') {
			return _elm_lang$core$Maybe$Just(_p7._0);
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _bundsol$boxed$Boxed_Dictionary$tryInt = F2(
	function (_p8, boxed) {
		var _p9 = boxed;
		if (_p9.ctor === 'Integer') {
			return _elm_lang$core$Maybe$Just(_p9._0);
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _bundsol$boxed$Boxed_Dictionary$foldr = F3(
	function (build, accum, boxed) {
		return A3(
			_elm_lang$core$Dict$foldl,
			build,
			accum,
			_bundsol$boxed$Boxed$asDict(boxed));
	});
var _bundsol$boxed$Boxed_Dictionary$foldl = F3(
	function (build, accum, boxed) {
		return A3(
			_elm_lang$core$Dict$foldl,
			build,
			accum,
			_bundsol$boxed$Boxed$asDict(boxed));
	});
var _bundsol$boxed$Boxed_Dictionary$filterMap = F2(
	function (convert, boxed) {
		var build = F3(
			function (key, value, accum) {
				var _p10 = A2(convert, key, value);
				if (_p10.ctor === 'Just') {
					return A3(_elm_lang$core$Dict$insert, key, _p10._0, accum);
				} else {
					return accum;
				}
			});
		return A3(_bundsol$boxed$Boxed_Dictionary$foldl, build, _elm_lang$core$Dict$empty, boxed);
	});
var _bundsol$boxed$Boxed_Dictionary$apply = F2(
	function ($function, boxed) {
		return $function(
			_bundsol$boxed$Boxed$asDict(boxed));
	});
var _bundsol$boxed$Boxed_Dictionary$mapGet = F3(
	function (convert, key, boxed) {
		return A2(
			_elm_lang$core$Maybe$andThen,
			convert,
			A2(
				_bundsol$boxed$Boxed_Dictionary$apply,
				_elm_lang$core$Dict$get(key),
				boxed));
	});
var _bundsol$boxed$Boxed_Dictionary$remove = F2(
	function (key, boxed) {
		return _bundsol$boxed$Boxed$Dictionary(
			A2(
				_bundsol$boxed$Boxed_Dictionary$apply,
				_elm_lang$core$Dict$remove(key),
				boxed));
	});
var _bundsol$boxed$Boxed_Dictionary$update = F3(
	function (key, modifier, boxed) {
		return _bundsol$boxed$Boxed$Dictionary(
			A2(
				_bundsol$boxed$Boxed_Dictionary$apply,
				A2(_elm_lang$core$Dict$update, key, modifier),
				boxed));
	});
var _bundsol$boxed$Boxed_Dictionary$insert = F3(
	function (key, value, boxed) {
		return _bundsol$boxed$Boxed$Dictionary(
			A2(
				_bundsol$boxed$Boxed_Dictionary$apply,
				A2(_elm_lang$core$Dict$insert, key, value),
				boxed));
	});
var _bundsol$boxed$Boxed_Dictionary$singleton = F2(
	function (key, boxed) {
		return _bundsol$boxed$Boxed$Dictionary(
			A2(_elm_lang$core$Dict$singleton, key, boxed));
	});
var _bundsol$boxed$Boxed_Dictionary$empty = _bundsol$boxed$Boxed$Dictionary(_elm_lang$core$Dict$empty);
