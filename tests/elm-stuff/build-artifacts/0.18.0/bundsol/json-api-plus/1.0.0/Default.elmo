var _bundsol$json_api_plus$Default$expectRetrieved = F3(
	function (bg, r, g) {
		var fuzzName = A2(
			_elm_lang$core$Basics_ops['++'],
			'Regarding field type ',
			A2(
				_elm_lang$core$Basics_ops['++'],
				r.primitive,
				A2(_elm_lang$core$Basics_ops['++'], ' and function ', bg.functionName)));
		return A4(
			_elm_community$elm_test$Test$fuzzWith,
			{runs: 2},
			_elm_community$elm_test$Fuzz$string,
			fuzzName,
			function (postFix) {
				var fieldName = A2(_elm_lang$core$Basics_ops['++'], 'test-only-', postFix);
				var nonExisting = A2(bg.$function, fieldName, g);
				var fallback = A3(r.getter, r.defaultValue, fieldName, g);
				var retrieved = A3(
					r.getter,
					r.defaultValue,
					fieldName,
					A3(r.setter, fieldName, r.value, g));
				return A2(
					_elm_community$elm_test$Expect$equal,
					{ctor: '_Tuple3', _0: _elm_lang$core$Maybe$Nothing, _1: r.value, _2: r.defaultValue},
					{ctor: '_Tuple3', _0: nonExisting, _1: retrieved, _2: fallback});
			});
	});
var _bundsol$json_api_plus$Default$relatedGuide = A2(
	_elm_lang$core$Maybe$withDefault,
	{doc: _bundsol$json_api_plus$JsonApi_TopLevel$emptyDocument, idr: _bundsol$json_api_plus$JsonApi$emptyIdr},
	A2(
		_elm_lang$core$Maybe$map,
		_bundsol$json_api_plus$JsonApi$setIdr(_bundsol$json_api_plus$JsonApi_Test_SampleData$userGuide),
		_elm_lang$core$List$head(
			A2(_bundsol$json_api_plus$JsonApi_Relationship$getIdrs, 'stocks', _bundsol$json_api_plus$JsonApi_Test_SampleData$userGuide))));
var _bundsol$json_api_plus$Default$DefaultRetrieval = F5(
	function (a, b, c, d, e) {
		return {primitive: a, defaultValue: b, value: c, setter: d, getter: e};
	});
var _bundsol$json_api_plus$Default$BoxedGetter = F2(
	function (a, b) {
		return {functionName: a, $function: b};
	});
var _bundsol$json_api_plus$Default$primaryPublic = function () {
	var bg = A2(_bundsol$json_api_plus$Default$BoxedGetter, 'getProperty', _bundsol$json_api_plus$JsonApi_Getter$getProperty);
	return A2(
		_elm_lang$core$List$map,
		F2(
			function (x, y) {
				return y(x);
			})(_bundsol$json_api_plus$JsonApi_Test_SampleData$userGuide),
		{
			ctor: '::',
			_0: A2(
				_bundsol$json_api_plus$Default$expectRetrieved,
				bg,
				A5(_bundsol$json_api_plus$Default$DefaultRetrieval, 'Int', 5005, 777, _bundsol$json_api_plus$JsonApi_Setter$setInt, _bundsol$json_api_plus$JsonApi_Getter$defaultInt)),
			_1: {
				ctor: '::',
				_0: A2(
					_bundsol$json_api_plus$Default$expectRetrieved,
					bg,
					A5(_bundsol$json_api_plus$Default$DefaultRetrieval, 'Float', 6.006, 5.7777, _bundsol$json_api_plus$JsonApi_Setter$setFloat, _bundsol$json_api_plus$JsonApi_Getter$defaultFloat)),
				_1: {
					ctor: '::',
					_0: A2(
						_bundsol$json_api_plus$Default$expectRetrieved,
						bg,
						A5(_bundsol$json_api_plus$Default$DefaultRetrieval, 'String', 'Fallback value', 'Charvar example', _bundsol$json_api_plus$JsonApi_Setter$setString, _bundsol$json_api_plus$JsonApi_Getter$defaultString)),
					_1: {
						ctor: '::',
						_0: A2(
							_bundsol$json_api_plus$Default$expectRetrieved,
							bg,
							A5(_bundsol$json_api_plus$Default$DefaultRetrieval, 'Bool', false, true, _bundsol$json_api_plus$JsonApi_Setter$setBool, _bundsol$json_api_plus$JsonApi_Getter$defaultBool)),
						_1: {ctor: '[]'}
					}
				}
			}
		});
}();
var _bundsol$json_api_plus$Default$relatedLocal = function () {
	var bg = A2(_bundsol$json_api_plus$Default$BoxedGetter, 'getLocal', _bundsol$json_api_plus$JsonApi_Getter$getLocal);
	return A2(
		_elm_lang$core$List$map,
		F2(
			function (x, y) {
				return y(x);
			})(_bundsol$json_api_plus$Default$relatedGuide),
		{
			ctor: '::',
			_0: A2(
				_bundsol$json_api_plus$Default$expectRetrieved,
				bg,
				A5(_bundsol$json_api_plus$Default$DefaultRetrieval, 'String', 'Fallback value', 'Charvar example', _bundsol$json_api_plus$JsonApi_Setter$setLocalString, _bundsol$json_api_plus$JsonApi_Getter$localDefaultString)),
			_1: {
				ctor: '::',
				_0: A2(
					_bundsol$json_api_plus$Default$expectRetrieved,
					bg,
					A5(_bundsol$json_api_plus$Default$DefaultRetrieval, 'Int', 5005, 777, _bundsol$json_api_plus$JsonApi_Setter$setLocalInt, _bundsol$json_api_plus$JsonApi_Getter$localDefaultInt)),
				_1: {
					ctor: '::',
					_0: A2(
						_bundsol$json_api_plus$Default$expectRetrieved,
						bg,
						A5(_bundsol$json_api_plus$Default$DefaultRetrieval, 'Float', 6.006, 5.7777, _bundsol$json_api_plus$JsonApi_Setter$setLocalFloat, _bundsol$json_api_plus$JsonApi_Getter$localDefaultFloat)),
					_1: {
						ctor: '::',
						_0: A2(
							_bundsol$json_api_plus$Default$expectRetrieved,
							bg,
							A5(_bundsol$json_api_plus$Default$DefaultRetrieval, 'Bool', false, true, _bundsol$json_api_plus$JsonApi_Setter$setLocalBool, _bundsol$json_api_plus$JsonApi_Getter$localDefaultBool)),
						_1: {ctor: '[]'}
					}
				}
			}
		});
}();
var _bundsol$json_api_plus$Default$suite = A2(
	_elm_community$elm_test$Test$describe,
	'Fuzz the field name for inserts and default retrievals of different types',
	_elm_lang$core$List$concat(
		{
			ctor: '::',
			_0: _bundsol$json_api_plus$Default$primaryPublic,
			_1: {
				ctor: '::',
				_0: _bundsol$json_api_plus$Default$relatedLocal,
				_1: {ctor: '[]'}
			}
		}));
