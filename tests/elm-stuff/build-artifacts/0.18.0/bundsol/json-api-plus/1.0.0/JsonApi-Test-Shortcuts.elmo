var _bundsol$json_api_plus$JsonApi_Test_Shortcuts$takeId = function (pairs) {
	var isIdField = function (_p0) {
		var _p1 = _p0;
		return A2(
			_elm_lang$core$List$member,
			_p1._0,
			{
				ctor: '::',
				_0: 'type',
				_1: {
					ctor: '::',
					_0: 'id',
					_1: {
						ctor: '::',
						_0: 'meta',
						_1: {ctor: '[]'}
					}
				}
			});
	};
	return A2(_elm_lang$core$List$filter, isIdField, pairs);
};
var _bundsol$json_api_plus$JsonApi_Test_Shortcuts_ops = _bundsol$json_api_plus$JsonApi_Test_Shortcuts_ops || {};
_bundsol$json_api_plus$JsonApi_Test_Shortcuts_ops['=>'] = F2(
	function (v0, v1) {
		return {ctor: '_Tuple2', _0: v0, _1: v1};
	});
var _bundsol$json_api_plus$JsonApi_Test_Shortcuts$n = _elm_lang$core$Json_Encode$null;
var _bundsol$json_api_plus$JsonApi_Test_Shortcuts$l = _elm_lang$core$Json_Encode$list;
var _bundsol$json_api_plus$JsonApi_Test_Shortcuts$f = _elm_lang$core$Json_Encode$float;
var _bundsol$json_api_plus$JsonApi_Test_Shortcuts$b = _elm_lang$core$Json_Encode$bool;
var _bundsol$json_api_plus$JsonApi_Test_Shortcuts$s = _elm_lang$core$Json_Encode$string;
var _bundsol$json_api_plus$JsonApi_Test_Shortcuts$i = _elm_lang$core$Json_Encode$int;
var _bundsol$json_api_plus$JsonApi_Test_Shortcuts$o = _elm_lang$core$Json_Encode$object;
var _bundsol$json_api_plus$JsonApi_Test_Shortcuts$linkage = function (pairs) {
	return A2(
		_bundsol$json_api_plus$JsonApi_Test_Shortcuts_ops['=>'],
		'data',
		_bundsol$json_api_plus$JsonApi_Test_Shortcuts$o(
			_bundsol$json_api_plus$JsonApi_Test_Shortcuts$takeId(pairs)));
};
var _bundsol$json_api_plus$JsonApi_Test_Shortcuts$linkages = function (pairList) {
	return A2(
		F2(
			function (v0, v1) {
				return {ctor: '_Tuple2', _0: v0, _1: v1};
			}),
		'data',
		_elm_lang$core$Json_Encode$list(
			A2(
				_elm_lang$core$List$map,
				function (_p2) {
					return _bundsol$json_api_plus$JsonApi_Test_Shortcuts$o(
						_bundsol$json_api_plus$JsonApi_Test_Shortcuts$takeId(_p2));
				},
				pairList)));
};
